---
openapi: 3.0.0
info:
  version: 2.0.0
  title: deputy-reporting-${environment}
  description: "OPG Data (deputy reporting integration)"
  contact:
    name: API Support

servers:
  - url: /v2
    description: deputy_reporting
tags:
  - name: deputy-reporting
    description: API operations relating to the deputy-reporting integration
    externalDocs:
      url: https://github.com/ministryofjustice/opg-data-deputy-reporting

x-amazon-apigateway-request-validators:
  all:
    validateRequestParameters: true
    validateRequestBody: true
x-amazon-apigateway-gateway-responses:
  ACCESS_DENIED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FORBIDDEN", "title":$context.error.messageString, "detail":"Forbidden - The current user is forbidden from accessing this data (in this way)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  API_CONFIGURATION_ERROR:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-API_CONFIGURATION_ERROR", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  AUTHORIZER_CONFIGURATION_ERROR:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_CONFIGURATION_ERROR", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  AUTHORIZER_FAILURE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-AUTHORIZER_FAILURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  BAD_REQUEST_BODY:
      responseTemplates:
        application/json: '{"errors": [{ "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST", "title":$context.error.messageString, "detail":"$context.error.validationErrorString", "meta": {"x-ray": "$context.xrayTraceId"} }]}'
  BAD_REQUEST_PARAMETERS:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-BAD_REQUEST_PARAMETERS", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  DEFAULT_4XX:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALIDREQUEST", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  DEFAULT_5XX:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-SERVERERROR", "title":$context.error.messageString, "detail":"Something unexpected happened internally", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  EXPIRED_TOKEN:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-EXPIRED_TOKEN", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INTEGRATION_FAILURE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_FAILURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INTEGRATION_TIMEOUT:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INTEGRATION_TIMEOUT", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INVALID_API_KEY:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_API_KEY", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  INVALID_SIGNATURE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-INVALID_SIGNATURE", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  MISSING_AUTHENTICATION_TOKEN:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MISSING_AUTHENTICATION_TOKEN", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  QUOTA_EXCEEDED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-QUOTA_EXCEEDED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  REQUEST_TOO_LARGE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-FILESIZELIMIT", "title":$context.error.messageString, "detail":"Payload too large, try and upload in smaller chunks", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  RESOURCE_NOT_FOUND:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-NOTFOUND", "title":$context.error.messageString, "detail":"That URL is not a valid route, or the item resource does not exist", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  THROTTLED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-THROTTLED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNAUTHORIZED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-UNAUTHORISED", "title":$context.error.messageString, "detail":"Unauthorised (no current user and there should be)", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  UNSUPPORTED_MEDIA_TYPE:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-MEDIA", "title":$context.error.messageString, "detail":"Unsupported media type for this endpoint", "meta": {"x-ray": "$context.xrayTraceId"} }}'
  WAF_FILTERED:
      responseTemplates:
        application/json: '{"errors": { "id": "$context.requestId", "code": "OPGDATA-API-WAF_FILTERED", "title":$context.error.messageString, "detail": "", "meta": {"x-ray": "$context.xrayTraceId"} }}'

"x-amazon-apigateway-policy": {
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Principal": {
              "AWS": ["${allowed_roles}"]
            },
            "Action": "execute-api:Invoke",
            "Resource": [
                "arn:aws:execute-api:eu-west-1:${account_id}:*/*/*/*"
            ]
        }
    ]
}

paths:
  /healthcheck:
    description: Sirius healthcheck
    get:
      summary: Sirius healthcheck
      description: Client report
      operationId: app.reporting_healthcheck
      tags:
        - "deputy-reporting"
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        200:
          description: Sirius healthcheck
          content:
            application/vnd.opg-data.v1+json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Healthcheck'
                  meta:
                    type: object
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /clients/{caseref}/reports:
    description: Client reports
    post:
      summary: Add a client report file
      description: Add a client report file
      operationId: app.addReportDocument
      tags:
        - "deputy-reporting"
      parameters:
        - in: path
          name: caseref
          required: true
          description: Case Reference / Casrec number
          schema:
            $ref: '#/components/schemas/CaseRef'
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        description: A report pdf file, and metadata
        content:
          application/json:
            schema:
              type: object
              properties:
                report:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: '#/components/schemas/Report'
      responses:
        201:
          description: Document created
          content:
            application/vnd.opg-data.v1+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Response201'
                  meta:
                    type: object
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /clients/{caseref}/reports/{id}/supportingdocuments:
    description: Supporting documents associated with client reports
    post:
      summary: Add a document to Supervision which supports a report
      description: Add a document to Supervision which supports a report
      operationId: app.addReportSupportingDocument
      tags:
        - "deputy-reporting"
      parameters:
        - in: path
          name: caseref
          required: true
          description: Case Reference / Casrec number
          schema:
            $ref: '#/components/schemas/CaseRef'
        - in: path
          name: id
          required: true
          description: Report UUID
          schema:
            $ref: '#/components/schemas/DocumentUuid'
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        description: The supporting document
        content:
          application/json:
            schema:
              type: object
              properties:
                supporting_document:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: '#/components/schemas/ReportSupportingDocument'
      responses:
        201:
          description: Document created
          content:
            application/vnd.opg-data.v1+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Response201'
                  meta:
                    type: object
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /clients/{caseref}/reports/{id}/checklists:
    description: Lodging and review checklists associated with client reports
    post:
      summary: Add a report lodging or review checklist
      description: Add a report lodging or review checklist
      operationId: app.addReportChecklist
      tags:
        - "deputy-reporting"
      parameters:
        - in: path
          name: caseref
          required: true
          description: Case Reference / Casrec number
          schema:
            $ref: '#/components/schemas/CaseRef'
        - in: path
          name: id
          required: true
          description: Report UUID
          schema:
            $ref: '#/components/schemas/DocumentUuid'
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        description: The checklist
        content:
          application/json:
            schema:
              type: object
              properties:
                checklist:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: '#/components/schemas/ReportChecklist'
      responses:
        201:
          description: Document created
          content:
            application/vnd.opg-data.v1+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Response201'
                  meta:
                    type: object
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
  /clients/{caseref}/reports/{id}/checklists/{checklistId}:
    description: Lodging and review checklists associated with client reports
    put:
      summary: Update a report lodging or review checklist
      description: Update a report lodging or review checklist
      operationId: app.updateReportChecklist
      tags:
        - "deputy-reporting"
      parameters:
        - in: path
          name: caseref
          required: true
          description: Case Reference / Casrec number
          schema:
            $ref: '#/components/schemas/CaseRef'
        - in: path
          name: id
          required: true
          description: Report UUID
          schema:
            $ref: '#/components/schemas/DocumentUuid'
        - in: path
          name: checklistId
          required: true
          description: Checklist UUID
          schema:
            $ref: '#/components/schemas/DocumentUuid'
      security:
        - sigv4: []
      x-amazon-apigateway-request-validator: "all"
      x-amazon-apigateway-integration:
        uri: arn:aws:apigateway:${region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${region}:${account_id}:function:$${stageVariables.flask_app_name}/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      requestBody:
        required: true
        description: The checklist
        content:
          application/json:
            schema:
              type: object
              properties:
                checklist:
                  type: object
                  required:
                    - data
                  properties:
                    data:
                      $ref: '#/components/schemas/ReportChecklist'
      responses:
        200:
          description: Document updated
          content:
            application/vnd.opg-data.v1+json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: '#/components/schemas/Response201'
                  meta:
                    type: object
        400:
          description: Generic bad request (generally invalid syntax)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error400'
        401:
          description: Unauthorised (no current user and there should be)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error401'
        403:
          description: Forbidden - The current user is forbidden from accessing this data (in this way)
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error403'
        404:
          description: That URL is not a valid route, or the item resource does not exist
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error404'
        413:
          description: Payload too large
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error413'
        415:
          description: Unsupported media type
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error415'
        500:
          description: Something unexpected happened and it is the API"s fault
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error500'
        503:
          description: Service Unavailable - please try again later
          content:
            application/vnd.opg-data.v1+json:
              schema:
                $ref: '#/components/schemas/Error503'
components:
  securitySchemes:
    sigv4:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: app.apikey_auth
  schemas:
    Healthcheck:
      type: object
    Report:
      type: object
      required:
        - type
        - attributes
        - file
      properties:
        type:
          type: string
          pattern: "^reports$"
          example: reports
        id:
          $ref: '#/components/schemas/DocumentUuid'
        attributes:
          type: object
          required:
            - submission_id
            - reporting_period_from
            - reporting_period_to
            - year
            - date_submitted
            - type
          properties:
            submission_id:
              $ref: '#/components/schemas/submissionId'
            reporting_period_from:
              $ref: '#/components/schemas/dateISO8601'
            reporting_period_to:
              $ref: '#/components/schemas/dateISO8601'
            year:
              $ref: '#/components/schemas/reportingYear'
            date_submitted:
              type: string
              example: "2020-01-03T09:30:00.001Z"
            type:
              $ref: '#/components/schemas/reportType'
        file:
          $ref: '#/components/schemas/file'
    ReportChecklist:
      type: object
      required:
        - type
        - attributes
        - file
      properties:
        type:
          type: string
          pattern: '^checklists$'
          example: checklists
        id:
          $ref: '#/components/schemas/DocumentUuid'
        attributes:
          type: object
          properties:
            submission_id:
              $ref: '#/components/schemas/submissionId'
            submitter_email:
              type: string
              example: "donald.draper@digital.justice.gov.uk"
            reporting_period_from:
              $ref: '#/components/schemas/dateISO8601'
            reporting_period_to:
              $ref: '#/components/schemas/dateISO8601'
            year:
              $ref: '#/components/schemas/reportingYear'
            type:
              $ref: '#/components/schemas/reportType'
        file:
          $ref: '#/components/schemas/file'
    ReportSupportingDocument:
      type: object
      required:
        - type
        - attributes
        - file
      properties:
        type:
          type: string
          pattern: '^supportingdocuments'
          example: supportingdocuments
        id:
          $ref: '#/components/schemas/DocumentUuid'
        attributes:
          type: object
          required:
            - submission_id
          properties:
            submission_id:
              $ref: '#/components/schemas/submissionId'
        file:
          $ref: '#/components/schemas/file'
    CaseRef:
      type: string
      pattern: '^([0-9]{7}T|[0-9]{8})$'
      example: '0319392T'
    DocumentUuid:
      type: string
      readOnly: true
      description: Document UUID
      pattern: '^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$'
      example: '5a8b1a26-8296-4373-ae61-f8d0b250e773'
    submissionId:
      type: integer
      example: 12345
    dateISO8601:
      type: string
      example: "2019-12-31"
    reportingYear:
      type: integer
      minimum: 2015
      maximum: 2150
      example: 2019
    reportType:
      type: string
      enum:
        - "PF"
        - "HW"
        - "NDR"
        - "COMBINED"
      example: "PF"
    file:
      type: object
      required:
        - name
        - mimetype
      properties:
        name:
          type: string
          pattern: '.*\S[.].*\S'
          example: Report_1234567T_2018_2019_11111.pdf
        mimetype:
          type: string
          pattern: '.*\S[/].*\S'
          example: application/pdf
        source:
          type: string
          pattern: '.*'
          description: The base64 encoded file
        s3_reference:
          type: string
          pattern: '.*'
          example: dd_doc_98765_01234567890123
          description: The filename only of the Amazon AWS S3 link to the document file in the Digideps bucket
    Response201:
      type: object
      required:
        - type
        - id
        - attributes
      properties:
        type:
          type: string
          pattern: "^reports|supportingdocuments|checklists$"
          example: reports
        id:
          $ref: '#/components/schemas/DocumentUuid'
        attributes:
          type: object
          required:
            - submission_id
          properties:
            submission_id:
              $ref: '#/components/schemas/submissionId'
    Error400:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-INVALIDREQUEST"
              title:
                type: string
                example: "Invalid Request"
              detail:
                type: string
                example: "Invalid request, the data is incorrect"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error401:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-UNAUTHORISED"
              title:
                type: string
                example: "User is not authorised"
              detail:
                type: string
                example: "Unauthorised (no current user and there should be)"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error403:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-FORBIDDEN"
              title:
                type: string
                example: "Access Denied"
              detail:
                type: string
                example: "Forbidden - The current user is forbidden from accessing this data (in this way)"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error404:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-NOTFOUND"
              title:
                type: string
                example: "Page not found"
              detail:
                type: string
                example: "That URL is not a valid route, or the item resource does not exist"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error413:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-FILESIZELIMIT"
              title:
                type: string
                example: "Payload too large"
              detail:
                type: string
                example: "Payload too large, try and upload in smaller chunks"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error415:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-MEDIA"
              title:
                type: string
                example: "Unsupported media type"
              detail:
                type: string
                example: "Unsupported media type for this endpoint"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error500:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-SERVERERROR"
              title:
                type: string
                example: "Internal server error"
              detail:
                type: string
                example: "Something unexpected happened internally"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
    Error503:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          items:
            type: object
            required:
              - code
              - title
            properties:
              id:
                type: string
                example: "A123BCD"
              code:
                type: string
                example: "OPGDATA-API-UNAVAILABLE"
              title:
                type: string
                example: "Service Unavailable"
              detail:
                type: string
                example: "Service is currently unavailable. Please try again later"
              meta:
                type: object
                properties:
                  x-ray:
                    type: string
                    example: "93c330d4-7d84-4c1b-8fdb-54cec5bfe747"
