on:
  workflow_call:
    inputs:
      terraform_path:
        description: 'The name of the terraform paths'
        required: true
        type: string
      workspace:
        description: 'Terraform workspace'
        required: true
        type: string
      image_tag:
        description: 'Image tag to use'
        required: false
        type: string
      protect_workspace:
        description: 'Whether to protect the workspace'
        default: "false"
        required: false
        type: string
      mock_sirius:
        description: 'Whether to use mock sirius'
        required: false
        default: '0'
        type: string
    secrets:
      aws_access_key_id_actions:
        required: true
      aws_secret_access_key_actions:
        required: true

jobs:
  terraform_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b
        with:
          fetch-depth: '0'

      - uses: unfor19/install-aws-cli-action@27d6061dae5d39e89be4d2246824f15e111a7e06

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@v3.0.3
        with:
          terraform_directory: infrastructure/${{ inputs.terraform_path }}

      - uses: hashicorp/setup-terraform@f985329c37cd4cb9cce4d325280c606b40e4e924
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - name: Configure AWS Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@fff2104678c2113fcefb9ae8294dc7ccb803e27c
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id_actions }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key_actions }}
          aws-region: eu-west-1
          role-duration-seconds: 3600
          role-session-name: OPGDeputyReportingGithubAction

      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: infrastructure/${{ inputs.terraform_path }}
        continue-on-error: true

      - name: Output variables
        id: output_variables
        run: |
          echo ${{ inputs.terraform_path }}
          echo ${{ inputs.workspace }}
          echo ${{ inputs.image_tag }}
          echo ${{ inputs.mock_sirius }}
        working-directory: infrastructure/${{ inputs.terraform_path }}
        continue-on-error: true

      - name: Modify openapi specification
        id: open_api
        run: sed -i "s/\"\${allowed_roles}\"/\${allowed_roles}/" deputy-reporting-openapi.yml
        working-directory: ./lambda_functions/v2/openapi

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: infrastructure/${{ inputs.terraform_path }}

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
          TF_VAR_use_mock_sirius: ${{ inputs.mock_sirius }}
        run: |
          terraform workspace show
          terraform plan -input=false -parallelism=30
        working-directory: infrastructure/${{ inputs.terraform_path }}

      - id: terraform_workspace
        if: inputs.terraform_path == 'environment' && inputs.protect_workspace == 'true'
        name: Register workspace
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-workspace-manager@v2.5.0
        with:
          aws_access_key_id: ${{ secrets.aws_access_key_id_actions }}
          aws_secret_access_key: ${{ secrets.aws_secret_access_key_actions }}
          aws_account_id: 288342028542
          aws_iam_role: integrations-ci
          register_workspace: ${{ inputs.workspace }}
          time_to_protect: 3

      - name: Terraform Apply Environment
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
          TF_VAR_use_mock_sirius: ${{ inputs.mock_sirius }}
        run: terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: infrastructure/${{ inputs.terraform_path }}
