on:
  workflow_call:
    inputs:
      terraform_path:
        description: 'The name of the terraform paths'
        required: true
        type: string
      workspace:
        description: 'Terraform workspace'
        required: true
        type: string
      image_tag:
        description: 'Image tag to use'
        required: false
        type: string
      protect_workspace:
        description: 'Whether to protect the workspace'
        default: false
        required: false
        type: boolean
      mock_sirius:
        description: 'Whether to use mock sirius'
        required: false
        default: '0'
        type: string
      environment:
        description: 'Environment to use for OIDC'
        required: true
        type: string

jobs:
  terraform_workflow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: '0'

      - uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1.0.7

      - id: terraform_version
        name: get terraform version
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-version@9a39e099657fda2d7389e1fab3c333ad3c704212 # v3.1.3
        with:
          terraform_directory: infrastructure/${{ inputs.terraform_path }}

      - uses: hashicorp/setup-terraform@b9cd54a3c349d3f38e8881555d616ced269862dd # v3.1.2
        with:
          terraform_version: ${{ steps.terraform_version.outputs.version }}
          terraform_wrapper: false

      - name: Configure AWS OIDC Credentials For Terraform
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: "arn:aws:iam::631181914621:role/oidc-data-deputy-reporting-${{ inputs.environment }}"
          role-session-name: OPGDeputyReportingGithubAction
          aws-region: eu-west-1
          role-duration-seconds: 3600

      - name: Lint Terraform
        id: tf_lint
        run: terraform fmt -check -recursive
        working-directory: infrastructure/${{ inputs.terraform_path }}
        continue-on-error: true

      - name: Output variables
        id: output_variables
        run: |
          echo ${{ inputs.terraform_path }}
          echo ${{ inputs.workspace }}
          echo ${{ inputs.image_tag }}
          echo ${{ inputs.mock_sirius }}
        working-directory: infrastructure/${{ inputs.terraform_path }}
        continue-on-error: true

      - name: Modify openapi specification
        id: open_api
        run: sed -i "s/\"\${allowed_roles}\"/\${allowed_roles}/" deputy-reporting-openapi.yml
        working-directory: ./lambda_functions/v2/openapi

      - name: Terraform Init
        run: terraform init -input=false
        working-directory: infrastructure/${{ inputs.terraform_path }}

      - name: Terraform Plan
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
          TF_VAR_use_mock_sirius: ${{ inputs.mock_sirius }}
        run: |
          terraform workspace show
          terraform plan -input=false -parallelism=30
        working-directory: infrastructure/${{ inputs.terraform_path }}

      - id: terraform_workspace
        if: inputs.terraform_path == 'environment' && inputs.protect_workspace
        name: Register workspace
        uses: ministryofjustice/opg-github-actions/.github/actions/terraform-workspace-manager@87c9f0610c8b733969292ae15a2d3f6f5637a995 # v2.7.3
        with:
          aws_account_id: 288342028542
          aws_iam_role: integrations-ci
          register_workspace: ${{ inputs.workspace }}
          time_to_protect: 3
          oidc_role: arn:aws:iam::631181914621:role/oidc-data-deputy-reporting-${{ inputs.environment }}

      - name: Terraform Apply Environment
        env:
          TF_WORKSPACE: ${{ inputs.workspace }}
          TF_VAR_image_tag: ${{ inputs.image_tag }}
          TF_VAR_use_mock_sirius: ${{ inputs.mock_sirius }}
        run: terraform apply -lock-timeout=300s -input=false -auto-approve -parallelism=30
        working-directory: infrastructure/${{ inputs.terraform_path }}
