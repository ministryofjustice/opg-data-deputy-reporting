on:
  workflow_call:
    inputs:
      tag:
        description: 'Tag for docker image'
        required: true
        type: string
      build_identifier:
        description: 'Branch we are on'
        required: true
        type: string

jobs:
  docker_build_scan_push:
    name: Build, Scan and Push Lambdas
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: "deputy-reporting-lambda"
            path: "lambda_functions/v2"
          - name: "deputy-reporting-mock-sirius"
            path: "mock_sirius"

    steps:
      - name: Check out code
        id: checkout_code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Show build tag
        env:
          IMAGE_TAG: ${{ inputs.tag }}
        run: echo "Tag to use - ${IMAGE_TAG}"

      - name: Build Container
        id: build_container
        run: docker build --file ${{ matrix.path }}/Dockerfile --tag ${{ matrix.name }}:latest ${{ matrix.path }}

      - uses: unfor19/install-aws-cli-action@e8b481e524a99f37fbd39fdc1dcb3341ab091367 # v1.0.7

      - name: configure OIDC AWS credentials for ECR push
        uses: aws-actions/configure-aws-credentials@ececac1a45f3b08a01d2dd070d28d111c5fe6722 # v4.1.0
        with:
          role-to-assume: arn:aws:iam::311462405659:role/data-deputy-reporting-gh-actions-ecr-push
          role-session-name: deputy-reporting-github-actions-ecr-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: Login to ECR
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@5a88a04c91d5c6f97aae0d9be790e64d9b1d47b7 # v1.7.1
        with:
          registries: 311462405659

      - name: trivy image scanning
        id: trivy_scan
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # 0.30.0
        with:
          image-ref: ${{ matrix.name }}:latest
          severity: "HIGH,CRITICAL"
          format: "sarif"
          scanners: "vuln"
          output: "trivy-results.sarif"
          timeout: 15m
        env:
          TRIVY_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db
          TRIVY_JAVA_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-java-db

      - name: upload trivy scan results to security tab
        if: ${{ matrix.name }} != 'deputy-reporting-mock-sirius'
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@5f8171a638ada777af81d42b55959a643bb29017 # v3.28.12
        with:
          sarif_file: "trivy-results.sarif"

      - name: Push Container
        env:
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: integrations
          IMAGE_NAME: ${{ matrix.name }}
          BUILD_IDENTIFIER: ${{ inputs.build_identifier }}
          IMAGE_TAG: ${{ inputs.tag }}
        run: |
          docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:$IMAGE_TAG
          if [[ "${BUILD_IDENTIFIER}" == "main" ]]; then
            docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME:main-$IMAGE_TAG
          fi
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY/$IMAGE_NAME
